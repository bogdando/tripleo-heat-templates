    #####################################################
    # Per step puppet configuration of the baremetal host
    #####################################################

    - name: Set host puppet debugging fact string
      set_fact:
        host_puppet_config_debug: "--debug --verbose"
      when:
        - enable_puppet | default(true) | bool
        - enable_debug | default(false) | bool

    - name: Write the config_step hieradata
      copy:
        content: "{{ dict(step=step|int) | to_json }}"
        dest: /etc/puppet/hieradata/config_step.json
        force: true
        mode: '0600'

    - name: Run puppet host configuration for step {{ step }}
      when: enable_puppet|default(true)|bool
      command: >-
        puppet apply {{ host_puppet_config_debug | default('') }}
        --modulepath=/etc/puppet/modules:/opt/stack/puppet-modules:/usr/share/openstack-puppet/modules
        --detailed-exitcodes
        --summarize
        --logdest syslog --logdest console --color=false
        /var/lib/tripleo-config/puppet_step_config.pp
      changed_when: outputs.rc == 2
      check_mode: no
      register: outputs
      failed_when: false
      no_log: true

    - name: "Debug output for task which failed: Run puppet host configuration for step {{ step }}"
      debug:
        var: outputs.stdout_lines | default([]) | union(outputs.stderr_lines | default([]))
      when:
        - enable_puppet | default(true) | bool
        - outputs.rc is defined
      failed_when: outputs.rc not in [0, 2]

    # TODO Pods PoC: adapted paunch debug apply shall execute that stanza and generate the pod manifest files
    ##################################################
    # Per step starting of the containers using paunch
    ##################################################

    # Note docker-puppet.py generates the hashed-*.json file, which is a copy of
    # the *step_n.json with a hash of the generated external config added
    # This acts as a salt to enable restarting the container if config changes
    - name: Start containers for step {{ step }}
      command: >-
        paunch --debug apply
        --default-runtime "{{ container_cli | default('docker') }}"
        --file /var/lib/tripleo-config/hashed-docker-container-startup-config-step_{{ step }}.json
        --config-id tripleo_step{{ step }} --managed-by tripleo-{{ tripleo_role_name }}
      changed_when: false
      check_mode: no
      register: outputs
      failed_when: false
      no_log: true

    - name: "Debug output for task which failed: Start containers for step {{ step }}"
      debug:
        var: outputs.stdout_lines | default([]) | union(outputs.stderr_lines | default([]))
      when: outputs.rc is defined
      failed_when: outputs.rc != 0

